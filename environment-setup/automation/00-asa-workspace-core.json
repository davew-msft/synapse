{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "uniqueSuffix": {
      "type": "String",
      "metadata": {
        "description": "Suffix added to all resource name to make them unique."
      }
    },
    "sqlAdministratorLoginPassword": {
      "type": "SecureString",
      "metadata": {
        "description": "Password for SQL Admin"
      }
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "sqlAdministratorLogin": "asa.sql.admin",
    "workspaceName": "[concat('asaworkspace', parameters('uniqueSuffix'))]",
    "adlsStorageAccountName": "[concat('asadatalake', parameters('uniqueSuffix'))]",
    "defaultDataLakeStorageFilesystemName": "defaultfs",
    "sqlComputeName": "SQLPool01",
    "sparkComputeName": "SparkPool01",
    "computeSubnetId": "",
    "sqlServerSKU": "DW500c",
    "storageBlobDataContributorRoleID": "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
    "defaultDataLakeStorageAccountUrl": "[concat('https://', variables('adlsStorageAccountName'), '.dfs.core.windows.net')]",
    "sparkAutoScaleEnabled": "true",
    "sparkMinNodeCount": "3",
    "sparkMaxNodeCount": "4",
    "sparkNodeCount": "0",
    "sparkNodeSizeFamily": "MemoryOptimized",
    "sparkNodeSize": "Small",
    "sparkAutoPauseEnabled": "true",
    "sparkAutoPauseDelayInMinutes": "15",
    "sparkVersion": "2.4",
    "packagesRequirementsFileName": "requirements.txt",
    "packagesRequirementsContent": "xgboost==1.0.2\nonnxruntime==1.0.0\nwerkzeug==0.16.1\nnimbusml==1.7.1\nruamel.yaml==0.16.9\nazureml-train-automl-runtime==1.6.0\nscikit-learn==0.20.3\nnumpy==1.16.2\npandas==0.23.4\nscipy==1.4.1\n",
    "keyVaultName": "[concat('asakeyvault', parameters('uniqueSuffix'))]",
    "blobStorageAccountName": "[concat('asastore', parameters('uniqueSuffix'))]",
    "applicationInsightsName": "[concat('asaappinsights', parameters('uniqueSuffix'))]",
    "amlWorkspaceName": "[concat('amlworkspace', parameters('uniqueSuffix'))]"   
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-04-01",
      "name": "[variables('blobStorageAccountName')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "encryption": {
          "services": {
            "blob": {
              "enabled": true
            },
            "file": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "supportsHttpsTrafficOnly": true
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('blobStorageAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('blobStorageAccountName'))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "enabled": false
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2018-02-14",
      "name": "[variables('keyVaultName')]",
      "location": "[variables('location')]",
      "properties": {
        "tenantId": "[subscription().tenantId]",
        "sku": {
          "name": "standard",
          "family": "A"
        },
        "accessPolicies": []
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[variables('adlsStorageAccountName')]",
      "location": "[variables('location')]",
      "dependsOn": [],
      "tags": {},
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot",
        "supportsHttpsTrafficOnly": "true",
        "isHnsEnabled": "true",
        "largeFileSharesState": "Disabled"
      },
      "resources": [
        {
          "type": "blobServices/containers",
          "apiVersion": "2018-07-01",
          "name": "[concat('default/', variables('defaultDataLakeStorageFilesystemName'))]",
          "dependsOn": [
            "[concat('Microsoft.Storage/storageAccounts/', variables('adlsStorageAccountName'))]"
          ]
        }
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('adlsStorageAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('adlsStorageAccountName'))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "enabled": false
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('adlsStorageAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('adlsStorageAccountName'))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Synapse/workspaces",
      "apiVersion": "2019-06-01-preview",
      "name": "[variables('workspaceName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('adlsStorageAccountName'), '/blobServices/default/containers/', variables('defaultDataLakeStorageFilesystemName'))]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "defaultDataLakeStorage": {
          "accountUrl": "[variables('defaultDataLakeStorageAccountUrl')]",
          "filesystem": "[variables('defaultDataLakeStorageFilesystemName')]"
        },
        "virtualNetworkProfile": {
          "computeSubnetId": "[variables('computeSubnetId')]"
        },
        "sqlAdministratorLogin": "[variables('sqlAdministratorLogin')]",
        "sqlAdministratorLoginPassword": "[parameters('sqlAdministratorLoginPassword')]"
      },
      "resources": [
        {
          "type": "firewallrules",
          "apiVersion": "2019-06-01-preview",
          "name": "allowAll",
          "location": "[variables('location')]",
          "dependsOn": [
            "[concat('Microsoft.Synapse/workspaces/', variables('workspaceName'))]"
          ],
          "properties": {
            "startIpAddress": "0.0.0.0",
            "endIpAddress": "255.255.255.255"
          }
        }
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers/providers/roleAssignments",
      "apiVersion": "2018-09-01-preview",
      "name": "[concat(variables('adlsStorageAccountName'), '/default/', variables('defaultDataLakeStorageFilesystemName'), '/Microsoft.Authorization/',  guid(concat(resourceGroup().id, '/', variables('storageBlobDataContributorRoleID'), '/', variables('workspaceName'))))]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Synapse/workspaces/', variables('workspaceName'))]"
      ],
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('storageBlobDataContributorRoleID'))]",
        "principalId": "[reference(concat('Microsoft.Synapse/workspaces/', variables('workspaceName')), '2019-06-01-preview', 'Full').identity.principalId]",
        "principalType": "ServicePrincipal"
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2018-09-01-preview",
      "name": "[guid(concat(resourceGroup().id, '/', variables('storageBlobDataContributorRoleID'), '/', variables('workspaceName'), '2'))]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Synapse/workspaces/', variables('workspaceName'))]"
      ],
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('storageBlobDataContributorRoleID'))]",
        "principalId": "[reference(concat('Microsoft.Synapse/workspaces/', variables('workspaceName')), '2019-06-01-preview', 'Full').identity.principalId]",
        "principalType": "ServicePrincipal"
      }
    },
    {
      "type": "Microsoft.Synapse/workspaces/bigDataPools",
      "apiVersion": "2019-06-01-preview",
      "name": "[concat(variables('workspaceName'), '/', variables('sparkComputeName'))]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Synapse/workspaces/', variables('workspaceName'))]"       
      ],
      "properties": {
        "nodeCount": "[variables('sparkNodeCount')]",
        "nodeSizeFamily": "[variables('sparkNodeSizeFamily')]",
        "nodeSize": "[variables('sparkNodeSize')]",
        "autoScale": {
          "enabled": "[variables('sparkAutoScaleEnabled')]",
          "minNodeCount": "[variables('sparkMinNodeCount')]",
          "maxNodeCount": "[variables('sparkMaxNodeCount')]"
        },
        "autoPause": {
          "enabled": "[variables('sparkAutoPauseEnabled')]",
          "delayInMinutes": "[variables('sparkAutoPauseDelayInMinutes')]"
        },
        "sparkVersion": "[variables('sparkVersion')]",
        "libraryRequirements": {
          "filename": "[variables('packagesRequirementsFileName')]",
          "content": "[variables('packagesRequirementsContent')]"
        }
      }
    },
    {
      "type": "Microsoft.Synapse/workspaces/sqlPools",
      "apiVersion": "2019-06-01-preview",
      "name": "[concat(variables('workspaceName'), '/', variables('sqlComputeName'))]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Synapse/workspaces/', variables('workspaceName'))]",
        "[concat('Microsoft.Synapse/workspaces/', variables('workspaceName'), '/bigDataPools/', variables('sparkComputeName'))]"
      ],
      "sku": {
        "name": "[variables('sqlServerSKU')]"
      },
      "properties": {
        "createMode": "Default",
        "collation": "SQL_Latin1_General_CP1_CI_AS"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2018-05-01-preview",
      "name": "[variables('applicationInsightsName')]",
      "location": "[if(or(equals(variables('location'),'eastus2'),equals(variables('location'),'westcentralus')),'southcentralus',variables('location'))]",
      "kind": "web",
      "properties": {
        "Application_Type": "web"
      }
    },
    {
      "type": "Microsoft.MachineLearningServices/workspaces",
      "apiVersion": "2020-03-01",
      "name": "[variables('amlWorkspaceName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('blobStorageAccountName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]"
      ],
      "sku": {
        "tier": "Enterprise",
        "name": "Enterprise"
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "friendlyName": "[variables('amlWorkspaceName')]",
        "keyVault": "[resourceId('Microsoft.KeyVault/vaults',variables('keyVaultName'))]",
        "applicationInsights": "[resourceId('Microsoft.Insights/components',variables('applicationInsightsName'))]",
        "storageAccount": "[resourceId('Microsoft.Storage/storageAccounts/',variables('blobStorageAccountName'))]",
        "hbiWorkspace": false,
        "allowPublicAccessWhenBehindVnet": false
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('adlsStorageAccountName'), '/default/staging')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('adlsStorageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('adlsStorageAccountName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('adlsStorageAccountName'), '/default/wwi-02')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('adlsStorageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('adlsStorageAccountName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('blobStorageAccountName'), '/default/staging')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('blobStorageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('blobStorageAccountName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('blobStorageAccountName'), '/default/azureml')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('blobStorageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('blobStorageAccountName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    }
  ],
  "outputs": {}
}
